name: Unittest

on:
  push:
    branches: [main,worflows]
  schedule:
    - cron: '00 23 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up MongoDB Client for Tests
        env:
          MONGO_URI: "mongodb://localhost:27017"
        run: |
          export MONGO_URI="mongodb://localhost:27017"
          python -c "
          import os
          from pymongo import MongoClient
          uri = os.getenv('MONGO_URI')
          client = MongoClient(uri)
          try:
              client.admin.command('ping')
              print('Successfully connected to MongoDB!')
          except Exception as e:
              print('MongoDB connection failed:', e)
                    "

      - name: Run Unit Tests
        env:
          MONGO_URI: "mongodb://localhost:27017"
        run: |
          python -m unittest discover -s test -p "*.py"
